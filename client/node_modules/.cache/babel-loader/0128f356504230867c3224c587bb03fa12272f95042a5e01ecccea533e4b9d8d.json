{"ast":null,"code":"var _jsxFileName = \"/home/developer/Desktop/pma_mvp/src/components/Navigation/UserMenu/AppNotificationButton/SwitchShowOnlyUnread/SwitchShowOnlyUnread.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SwitchShowOnlyUnread = _ref => {\n  _s();\n  let {\n    id,\n    checked,\n    onChange\n  } = _ref;\n  const [isChecked, setIsChecked] = useState(checked);\n  const handleToggle = () => {\n    const newChecked = !isChecked;\n    setIsChecked(newChecked);\n    onChange && onChange(newChecked);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center pl-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: id,\n      className: \"hidden\",\n      checked: isChecked,\n      onChange: handleToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      className: \"flex items-center cursor-pointer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-[28px] h-4 bg-gray-100 rounded-full shadow-inner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${isChecked ? \"bg-primary-500\" : \"bg-white\"} absolute left-[2px] top-[2px] w-3 h-3 rounded-[20px] transition-transform transform ${isChecked ? \"translate-x-full\" : \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(SwitchShowOnlyUnread, \"PhP7ZOkwJBhoZyPv2N65OySr648=\");\n_c = SwitchShowOnlyUnread;\nvar _c;\n$RefreshReg$(_c, \"SwitchShowOnlyUnread\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","SwitchShowOnlyUnread","_ref","_s","id","checked","onChange","isChecked","setIsChecked","handleToggle","newChecked","className","children","type","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","_c","$RefreshReg$"],"sources":["/home/developer/Desktop/pma_mvp/src/components/Navigation/UserMenu/AppNotificationButton/SwitchShowOnlyUnread/SwitchShowOnlyUnread.tsx"],"sourcesContent":["import { FC, useState } from \"react\";\n\ninterface IProps {\n  id: string;\n  checked: boolean;\n  onChange: Function;\n}\n\nexport const SwitchShowOnlyUnread: FC<IProps> = ({ id, checked, onChange }) => {\n  const [isChecked, setIsChecked] = useState(checked);\n  const handleToggle = () => {\n    const newChecked = !isChecked;\n    setIsChecked(newChecked);\n    onChange && onChange(newChecked);\n  };\n  return (\n    <div className=\"flex items-center pl-2\">\n      <input\n        type=\"checkbox\"\n        id={id}\n        className=\"hidden\"\n        checked={isChecked}\n        onChange={handleToggle}\n      />\n      <label htmlFor={id} className=\"flex items-center cursor-pointer\">\n        <div className=\"relative\">\n          <div className=\"w-[28px] h-4 bg-gray-100 rounded-full shadow-inner\"></div>\n          <div\n            className={`${\n              isChecked ? \"bg-primary-500\" : \"bg-white\"\n            } absolute left-[2px] top-[2px] w-3 h-3 rounded-[20px] transition-transform transform ${\n              isChecked ? \"translate-x-full\" : \"\"\n            }`}\n          ></div>\n        </div>\n      </label>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,SAAaA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQrC,OAAO,MAAMC,oBAAgC,GAAGC,IAAA,IAA+B;EAAAC,EAAA;EAAA,IAA9B;IAAEC,EAAE;IAAEC,OAAO;IAAEC;EAAS,CAAC,GAAAJ,IAAA;EACxE,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAACO,OAAO,CAAC;EACnD,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,UAAU,GAAG,CAACH,SAAS;IAC7BC,YAAY,CAACE,UAAU,CAAC;IACxBJ,QAAQ,IAAIA,QAAQ,CAACI,UAAU,CAAC;EAClC,CAAC;EACD,oBACEV,OAAA;IAAKW,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrCZ,OAAA;MACEa,IAAI,EAAC,UAAU;MACfT,EAAE,EAAEA,EAAG;MACPO,SAAS,EAAC,QAAQ;MAClBN,OAAO,EAAEE,SAAU;MACnBD,QAAQ,EAAEG;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvB,eACFjB,OAAA;MAAOkB,OAAO,EAAEd,EAAG;MAACO,SAAS,EAAC,kCAAkC;MAAAC,QAAA,eAC9DZ,OAAA;QAAKW,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvBZ,OAAA;UAAKW,SAAS,EAAC;QAAoD;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,eAC1EjB,OAAA;UACEW,SAAS,EAAG,GACVJ,SAAS,GAAG,gBAAgB,GAAG,UAChC,wFACCA,SAAS,GAAG,kBAAkB,GAAG,EAClC;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEV,CAAC;AAACd,EAAA,CA9BWF,oBAAgC;AAAAkB,EAAA,GAAhClB,oBAAgC;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
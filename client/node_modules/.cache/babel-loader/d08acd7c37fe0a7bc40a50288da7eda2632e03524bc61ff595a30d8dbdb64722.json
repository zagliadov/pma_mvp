{"ast":null,"code":"var _jsxFileName = \"/home/developer/Desktop/pma_mvp/src/components/Navigation/MenuToggle/MenuToggle.tsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState, useEffect } from \"react\";\nimport { FaOpenMenu } from \"../../icons/icons\";\nimport { MenuToggleDropdown } from \"./MenuToggleDropdown/MenuToggleDropdown\";\nimport { useClickOutside } from \"../../../hooks/useClickOutside\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport { toggleIsActiveSidebar } from \"../../../redux/diffSlice/diffSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MenuToggle = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const dropdownRef = useRef(null);\n  const dispatch = useAppDispatch();\n  const isActiveSidebar = useAppSelector(state => state.diff.isActiveSidebar);\n  useClickOutside(dropdownRef, () => setIsOpen(false));\n  useEffect(() => {\n    if (!isOpen) {\n      dispatch(toggleIsActiveSidebar(false));\n    }\n  }, [dispatch, isOpen]);\n  const handleToggle = () => {\n    setIsOpen(!isOpen);\n    dispatch(toggleIsActiveSidebar(!isActiveSidebar));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex`,\n    ref: dropdownRef,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleToggle(),\n      className: \"pl-4 flex items-center\",\n      children: /*#__PURE__*/_jsxDEV(FaOpenMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuToggleDropdown, {\n      isOpen: isOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(MenuToggle, \"m1z/hpoXDElEcsy1F6rmyUCj0f0=\", false, function () {\n  return [useAppDispatch, useAppSelector, useClickOutside];\n});\n_c = MenuToggle;\nvar _c;\n$RefreshReg$(_c, \"MenuToggle\");","map":{"version":3,"names":["useRef","useState","useEffect","FaOpenMenu","MenuToggleDropdown","useClickOutside","useAppSelector","useAppDispatch","toggleIsActiveSidebar","jsxDEV","_jsxDEV","MenuToggle","_s","isOpen","setIsOpen","dropdownRef","dispatch","isActiveSidebar","state","diff","handleToggle","className","ref","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/developer/Desktop/pma_mvp/src/components/Navigation/MenuToggle/MenuToggle.tsx"],"sourcesContent":["import { FC, useRef, useState, useEffect } from \"react\";\nimport { FaOpenMenu, FaCloseMenu, FaCheckCircle } from \"../../icons/icons\";\nimport { MenuToggleDropdown } from \"./MenuToggleDropdown/MenuToggleDropdown\";\nimport { useClickOutside } from \"../../../hooks/useClickOutside\";\nimport { useAppSelector, useAppDispatch } from \"../../../redux/hooks\";\nimport { RootState } from \"../../../redux/store\";\nimport { toggleIsActiveSidebar } from \"../../../redux/diffSlice/diffSlice\";\n\nexport const MenuToggle: FC = () => {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const dispatch = useAppDispatch();\n  const isActiveSidebar = useAppSelector(\n    (state: RootState) => state.diff.isActiveSidebar\n  );\n\n  useClickOutside(dropdownRef, () => setIsOpen(false));\n\n  useEffect(() => {\n    if (!isOpen) {\n      dispatch(toggleIsActiveSidebar(false));\n    }\n  }, [dispatch, isOpen]);\n\n  const handleToggle = () => {\n    setIsOpen(!isOpen);\n    dispatch(toggleIsActiveSidebar(!isActiveSidebar));\n  };\n\n  return (\n    <div className={`flex`} ref={dropdownRef}>\n      {/* {isOpen ? (\n        <div className=\"flex items-center justify-between px-4 w-80 z-[100]\">\n          <div className=\"flex items-center\">\n            <FaCheckCircle />\n            <span className=\"text-sm font-bold pl-1 uppercase tracking-[0.08em]\">\n              saas-mvp\n            </span>\n          </div>\n          <button onClick={() => handleToggle()} className=\"pl-4 flex\">\n            <FaCloseMenu />\n          </button>\n        </div>\n      ) : (\n        <button onClick={() => handleToggle()} className=\"pl-4 flex items-center\">\n          <FaOpenMenu />\n        </button>\n      )} */}\n      <button onClick={() => handleToggle()} className=\"pl-4 flex items-center\">\n          <FaOpenMenu />\n        </button>\n\n      <MenuToggleDropdown isOpen={isOpen} />\n    </div>\n  );\n};\n"],"mappings":";;AAAA,SAAaA,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACvD,SAASC,UAAU,QAAoC,mBAAmB;AAC1E,SAASC,kBAAkB,QAAQ,yCAAyC;AAC5E,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,cAAc,EAAEC,cAAc,QAAQ,sBAAsB;AAErE,SAASC,qBAAqB,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3E,OAAO,MAAMC,UAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAU,KAAK,CAAC;EACpD,MAAMc,WAAW,GAAGf,MAAM,CAAiB,IAAI,CAAC;EAChD,MAAMgB,QAAQ,GAAGT,cAAc,EAAE;EACjC,MAAMU,eAAe,GAAGX,cAAc,CACnCY,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACF,eAAe,CACjD;EAEDZ,eAAe,CAACU,WAAW,EAAE,MAAMD,SAAS,CAAC,KAAK,CAAC,CAAC;EAEpDZ,SAAS,CAAC,MAAM;IACd,IAAI,CAACW,MAAM,EAAE;MACXG,QAAQ,CAACR,qBAAqB,CAAC,KAAK,CAAC,CAAC;IACxC;EACF,CAAC,EAAE,CAACQ,QAAQ,EAAEH,MAAM,CAAC,CAAC;EAEtB,MAAMO,YAAY,GAAGA,CAAA,KAAM;IACzBN,SAAS,CAAC,CAACD,MAAM,CAAC;IAClBG,QAAQ,CAACR,qBAAqB,CAAC,CAACS,eAAe,CAAC,CAAC;EACnD,CAAC;EAED,oBACEP,OAAA;IAAKW,SAAS,EAAG,MAAM;IAACC,GAAG,EAAEP,WAAY;IAAAQ,QAAA,gBAkBvCb,OAAA;MAAQc,OAAO,EAAEA,CAAA,KAAMJ,YAAY,EAAG;MAACC,SAAS,EAAC,wBAAwB;MAAAE,QAAA,eACrEb,OAAA,CAACP,UAAU;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACP,eAEXlB,OAAA,CAACN,kBAAkB;MAACS,MAAM,EAAEA;IAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAClC;AAEV,CAAC;AAAChB,EAAA,CA/CWD,UAAc;EAAA,QAGRJ,cAAc,EACPD,cAAc,EAItCD,eAAe;AAAA;AAAAwB,EAAA,GARJlB,UAAc;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isEmptyStateProject: true,\n  isEmptyStateTask: true,\n  projects: []\n};\nexport const projectSlice = createSlice({\n  name: \"project\",\n  initialState,\n  reducers: {\n    toggleIsEmptyStateProject: state => {\n      state.isEmptyStateProject = false;\n    },\n    toggleIsEmptyStateTask: (state, action) => {\n      state.isEmptyStateTask = action.payload;\n    },\n    addProject: (state, action) => {\n      state.projects.push(action.payload);\n    }\n  },\n  extraReducers: builder => {}\n});\nexport const {\n  addProject,\n  toggleIsEmptyStateProject,\n  toggleIsEmptyStateTask\n} = projectSlice.actions;\nexport default projectSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","isEmptyStateProject","isEmptyStateTask","projects","projectSlice","name","reducers","toggleIsEmptyStateProject","state","toggleIsEmptyStateTask","action","payload","addProject","push","extraReducers","builder","actions","reducer"],"sources":["/home/developer/Desktop/pma_mvp/src/redux/projectSlice/projectSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState, AppThunk } from \"../store\";\n\ninterface IProjects {\n  projectName: string;\n  projectMembers: string[];\n  projectTasks?: string[];\n  projectDescription: string;\n}\nexport interface projectState {\n  isEmptyStateProject: boolean;\n  isEmptyStateTask: boolean;\n  projects: IProjects[];\n}\n\nconst initialState: projectState = {\n  isEmptyStateProject: true,\n  isEmptyStateTask: true,\n  projects: [],\n};\n\nexport const projectSlice = createSlice({\n  name: \"project\",\n  initialState,\n  reducers: {\n    toggleIsEmptyStateProject: (state) => {\n      state.isEmptyStateProject = false;\n    },\n    toggleIsEmptyStateTask: (state, action) => {\n      state.isEmptyStateTask = action.payload;\n    },\n    addProject: (state, action: PayloadAction<IProjects>) => {\n      state.projects.push(action.payload);\n    },\n  },\n  extraReducers: (builder) => {},\n});\n\nexport const { addProject, toggleIsEmptyStateProject, toggleIsEmptyStateTask } =\n  projectSlice.actions;\n\nexport default projectSlice.reducer;\n"],"mappings":"AAAA,SAA2BA,WAAW,QAAuB,kBAAkB;AAe/E,MAAMC,YAA0B,GAAG;EACjCC,mBAAmB,EAAE,IAAI;EACzBC,gBAAgB,EAAE,IAAI;EACtBC,QAAQ,EAAE;AACZ,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGL,WAAW,CAAC;EACtCM,IAAI,EAAE,SAAS;EACfL,YAAY;EACZM,QAAQ,EAAE;IACRC,yBAAyB,EAAGC,KAAK,IAAK;MACpCA,KAAK,CAACP,mBAAmB,GAAG,KAAK;IACnC,CAAC;IACDQ,sBAAsB,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MACzCF,KAAK,CAACN,gBAAgB,GAAGQ,MAAM,CAACC,OAAO;IACzC,CAAC;IACDC,UAAU,EAAEA,CAACJ,KAAK,EAAEE,MAAgC,KAAK;MACvDF,KAAK,CAACL,QAAQ,CAACU,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;IACrC;EACF,CAAC;EACDG,aAAa,EAAGC,OAAO,IAAK,CAAC;AAC/B,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,UAAU;EAAEL,yBAAyB;EAAEE;AAAuB,CAAC,GAC5EL,YAAY,CAACY,OAAO;AAEtB,eAAeZ,YAAY,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
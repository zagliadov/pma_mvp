{"ast":null,"code":"var _jsxFileName = \"/home/developer/Desktop/pma_mvp/src/components/Navigation/MenuToggle/MenuToggle.tsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport { FaOpenMenu, FaCloseMenu } from \"../../icons/icons\";\nimport { MenuToggleDropdown } from \"./MenuToggleDropdown/MenuToggleDropdown\";\nimport { useClickOutside } from \"../../../hooks/useClickOutside\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MenuToggle = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const dropdownRef = useRef(null);\n  useClickOutside(dropdownRef, () => setIsOpen(false));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex w-auto pl-4 flex-col`,\n    ref: dropdownRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `z-[100] flex items-center`,\n      children: [isOpen ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm font-bold uppercase tracking-[0.08em]\",\n        children: \"Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 19\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsOpen(!isOpen),\n        className: `${isOpen && \"pl-[220px]\"}`,\n        children: isOpen ? /*#__PURE__*/_jsxDEV(FaCloseMenu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(FaOpenMenu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuToggleDropdown, {\n      isOpen: isOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(MenuToggle, \"02ci0Qyg6p3t5kYtKKwlhiC3by0=\", false, function () {\n  return [useClickOutside];\n});\n_c = MenuToggle;\nvar _c;\n$RefreshReg$(_c, \"MenuToggle\");","map":{"version":3,"names":["useRef","useState","FaOpenMenu","FaCloseMenu","MenuToggleDropdown","useClickOutside","jsxDEV","_jsxDEV","MenuToggle","_s","isOpen","setIsOpen","dropdownRef","className","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/developer/Desktop/pma_mvp/src/components/Navigation/MenuToggle/MenuToggle.tsx"],"sourcesContent":["import { FC, useRef, useState } from \"react\";\nimport { FaOpenMenu, FaCloseMenu } from \"../../icons/icons\";\nimport { MenuToggleDropdown } from \"./MenuToggleDropdown/MenuToggleDropdown\";\nimport { useClickOutside } from \"../../../hooks/useClickOutside\";\n\nexport const MenuToggle: FC = () => {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  useClickOutside(dropdownRef, () => setIsOpen(false));\n\n  return (\n    <div className={`flex w-auto pl-4 flex-col`} ref={dropdownRef}>\n      <div className={`z-[100] flex items-center`}>\n        {isOpen ? <span className=\"text-sm font-bold uppercase tracking-[0.08em]\">Test</span> : null}\n        <button\n          onClick={() => setIsOpen(!isOpen)}\n          className={`${isOpen && \"pl-[220px]\"}`}\n        >\n          {isOpen ? <FaCloseMenu /> : <FaOpenMenu />}\n        </button>\n      </div>\n      <MenuToggleDropdown isOpen={isOpen} />\n    </div>\n  );\n};\n"],"mappings":";;AAAA,SAAaA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,SAASC,UAAU,EAAEC,WAAW,QAAQ,mBAAmB;AAC3D,SAASC,kBAAkB,QAAQ,yCAAyC;AAC5E,SAASC,eAAe,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,OAAO,MAAMC,UAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAU,KAAK,CAAC;EACpD,MAAMW,WAAW,GAAGZ,MAAM,CAAiB,IAAI,CAAC;EAChDK,eAAe,CAACO,WAAW,EAAE,MAAMD,SAAS,CAAC,KAAK,CAAC,CAAC;EAEpD,oBACEJ,OAAA;IAAKM,SAAS,EAAG,2BAA2B;IAACC,GAAG,EAAEF,WAAY;IAAAG,QAAA,gBAC5DR,OAAA;MAAKM,SAAS,EAAG,2BAA2B;MAAAE,QAAA,GACzCL,MAAM,gBAAGH,OAAA;QAAMM,SAAS,EAAC,+CAA+C;QAAAE,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,GAAG,IAAI,eAC5FZ,OAAA;QACEa,OAAO,EAAEA,CAAA,KAAMT,SAAS,CAAC,CAACD,MAAM,CAAE;QAClCG,SAAS,EAAG,GAAEH,MAAM,IAAI,YAAa,EAAE;QAAAK,QAAA,EAEtCL,MAAM,gBAAGH,OAAA,CAACJ,WAAW;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,gBAAGZ,OAAA,CAACL,UAAU;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACnC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACL,eACNZ,OAAA,CAACH,kBAAkB;MAACM,MAAM,EAAEA;IAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAClC;AAEV,CAAC;AAACV,EAAA,CAnBWD,UAAc;EAAA,QAGzBH,eAAe;AAAA;AAAAgB,EAAA,GAHJb,UAAc;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
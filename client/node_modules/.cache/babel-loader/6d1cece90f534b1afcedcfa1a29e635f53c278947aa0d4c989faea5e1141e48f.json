{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isEmptyStateProject: true,\n  isEmptyStateTask: true,\n  projects: [{\n    projectSpaceName: \"Test space\",\n    projectName: \"todo test 1\",\n    projectMembers: [\"test@gmail.com\", \"test2@gmail.com\"],\n    projectTasks: [\"first task\", \"second tasks\"],\n    projectDescription: \"first test project description\"\n  }, {\n    projectSpaceName: \"Test space\",\n    projectName: \"crud test\",\n    projectMembers: [\"test3@gmail.com\", \"test5@gmail.com\"],\n    projectTasks: [\"second task 1\", \"second tasks 2\"],\n    projectDescription: \"second test project description\"\n  }]\n};\nexport const projectSlice = createSlice({\n  name: \"project\",\n  initialState,\n  reducers: {\n    toggleIsEmptyStateProject: (state, action) => {\n      state.isEmptyStateProject = action.payload;\n    },\n    toggleIsEmptyStateTask: (state, action) => {\n      state.isEmptyStateTask = action.payload;\n    },\n    addProject: (state, action) => {\n      state.projects.push(action.payload);\n    }\n  },\n  extraReducers: builder => {}\n});\nexport const {\n  addProject,\n  toggleIsEmptyStateProject,\n  toggleIsEmptyStateTask\n} = projectSlice.actions;\nexport default projectSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","isEmptyStateProject","isEmptyStateTask","projects","projectSpaceName","projectName","projectMembers","projectTasks","projectDescription","projectSlice","name","reducers","toggleIsEmptyStateProject","state","action","payload","toggleIsEmptyStateTask","addProject","push","extraReducers","builder","actions","reducer"],"sources":["/app/src/redux/projectSlice/projectSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState, AppThunk } from \"../store\";\n\nexport interface IProjects {\n  projectSpaceName?: string;\n  projectName: string;\n  projectMembers: string[];\n  projectTasks?: string[];\n  projectDescription: string;\n}\nexport interface projectState {\n  isEmptyStateProject: boolean;\n  isEmptyStateTask: boolean;\n  projects: IProjects[];\n}\n\nconst initialState: projectState = {\n  isEmptyStateProject: true,\n  isEmptyStateTask: true,\n  projects: [\n    {\n      projectSpaceName: \"Test space\",\n      projectName: \"todo test 1\",\n      projectMembers: [\"test@gmail.com\", \"test2@gmail.com\"],\n      projectTasks: [\"first task\", \"second tasks\"],\n      projectDescription: \"first test project description\",\n    },\n    {\n      projectSpaceName: \"Test space\",\n      projectName: \"crud test\",\n      projectMembers: [\"test3@gmail.com\", \"test5@gmail.com\"],\n      projectTasks: [\"second task 1\", \"second tasks 2\"],\n      projectDescription: \"second test project description\",\n    },\n  ],\n};\n\nexport const projectSlice = createSlice({\n  name: \"project\",\n  initialState,\n  reducers: {\n    toggleIsEmptyStateProject: (state, action) => {\n      state.isEmptyStateProject = action.payload;\n    },\n    toggleIsEmptyStateTask: (state, action) => {\n      state.isEmptyStateTask = action.payload;\n    },\n    addProject: (state, action: PayloadAction<IProjects>) => {\n      state.projects.push(action.payload);\n    },\n  },\n  extraReducers: (builder) => {},\n});\n\nexport const { addProject, toggleIsEmptyStateProject, toggleIsEmptyStateTask } =\n  projectSlice.actions;\n\nexport default projectSlice.reducer;\n"],"mappings":"AAAA,SAA2BA,WAAW,QAAuB,kBAAkB;AAgB/E,MAAMC,YAA0B,GAAG;EACjCC,mBAAmB,EAAE,IAAI;EACzBC,gBAAgB,EAAE,IAAI;EACtBC,QAAQ,EAAE,CACR;IACEC,gBAAgB,EAAE,YAAY;IAC9BC,WAAW,EAAE,aAAa;IAC1BC,cAAc,EAAE,CAAC,gBAAgB,EAAE,iBAAiB,CAAC;IACrDC,YAAY,EAAE,CAAC,YAAY,EAAE,cAAc,CAAC;IAC5CC,kBAAkB,EAAE;EACtB,CAAC,EACD;IACEJ,gBAAgB,EAAE,YAAY;IAC9BC,WAAW,EAAE,WAAW;IACxBC,cAAc,EAAE,CAAC,iBAAiB,EAAE,iBAAiB,CAAC;IACtDC,YAAY,EAAE,CAAC,eAAe,EAAE,gBAAgB,CAAC;IACjDC,kBAAkB,EAAE;EACtB,CAAC;AAEL,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGV,WAAW,CAAC;EACtCW,IAAI,EAAE,SAAS;EACfV,YAAY;EACZW,QAAQ,EAAE;IACRC,yBAAyB,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5CD,KAAK,CAACZ,mBAAmB,GAAGa,MAAM,CAACC,OAAO;IAC5C,CAAC;IACDC,sBAAsB,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MACzCD,KAAK,CAACX,gBAAgB,GAAGY,MAAM,CAACC,OAAO;IACzC,CAAC;IACDE,UAAU,EAAEA,CAACJ,KAAK,EAAEC,MAAgC,KAAK;MACvDD,KAAK,CAACV,QAAQ,CAACe,IAAI,CAACJ,MAAM,CAACC,OAAO,CAAC;IACrC;EACF,CAAC;EACDI,aAAa,EAAGC,OAAO,IAAK,CAAC;AAC/B,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,UAAU;EAAEL,yBAAyB;EAAEI;AAAuB,CAAC,GAC5EP,YAAY,CAACY,OAAO;AAEtB,eAAeZ,YAAY,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/developer/Desktop/pma_mvp/src/components/Navigation/UserMenu/AppNotificationButton/SwitchShowOnlyUnread/SwitchShowOnlyUnread.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SwitchShowOnlyUnread = _ref => {\n  _s();\n  let {\n    id,\n    label,\n    checked,\n    onChange\n  } = _ref;\n  const [isChecked, setIsChecked] = useState(checked);\n  const handleToggle = () => {\n    const newChecked = !isChecked;\n    setIsChecked(newChecked);\n    onChange && onChange(newChecked);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: id,\n      className: \"hidden\",\n      checked: isChecked,\n      onChange: handleToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      className: \"flex items-center cursor-pointer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-[26px] h-4 bg-gray-100 rounded-full shadow-inner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${isChecked ? \"bg-green-500\" : \"bg-white\"} absolute left-0 top-[2px] w-3 h-3 rounded-full transition-transform transform ${isChecked ? \"translate-x-full\" : \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), label && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-3 font-medium\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(SwitchShowOnlyUnread, \"PhP7ZOkwJBhoZyPv2N65OySr648=\");\n_c = SwitchShowOnlyUnread;\nvar _c;\n$RefreshReg$(_c, \"SwitchShowOnlyUnread\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","SwitchShowOnlyUnread","_ref","_s","id","label","checked","onChange","isChecked","setIsChecked","handleToggle","newChecked","className","children","type","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","_c","$RefreshReg$"],"sources":["/home/developer/Desktop/pma_mvp/src/components/Navigation/UserMenu/AppNotificationButton/SwitchShowOnlyUnread/SwitchShowOnlyUnread.tsx"],"sourcesContent":["import { FC, useState } from \"react\";\n\ninterface IProps {\n  id: string;\n  label: string;\n  checked: boolean;\n  onChange: Function;\n}\n\nexport const SwitchShowOnlyUnread: FC<IProps> = ({\n  id,\n  label,\n  checked,\n  onChange,\n}) => {\n  const [isChecked, setIsChecked] = useState(checked);\n  const handleToggle = () => {\n    const newChecked = !isChecked;\n    setIsChecked(newChecked);\n    onChange && onChange(newChecked);\n  };\n  return (\n    <div className=\"flex items-center\">\n      <input\n        type=\"checkbox\"\n        id={id}\n        className=\"hidden\"\n        checked={isChecked}\n        onChange={handleToggle}\n      />\n      <label htmlFor={id} className=\"flex items-center cursor-pointer\">\n        <div className=\"relative\">\n          <div className=\"w-[26px] h-4 bg-gray-100 rounded-full shadow-inner\"></div>\n          <div\n            className={`${\n              isChecked ? \"bg-green-500\" : \"bg-white\"\n            } absolute left-0 top-[2px] w-3 h-3 rounded-full transition-transform transform ${\n              isChecked ? \"translate-x-full\" : \"\"\n            }`}\n          ></div>\n        </div>\n        {label && <div className=\"ml-3 font-medium\">{label}</div>}\n      </label>\n    </div>\n  );\n};"],"mappings":";;AAAA,SAAaA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASrC,OAAO,MAAMC,oBAAgC,GAAGC,IAAA,IAK1C;EAAAC,EAAA;EAAA,IAL2C;IAC/CC,EAAE;IACFC,KAAK;IACLC,OAAO;IACPC;EACF,CAAC,GAAAL,IAAA;EACC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAACQ,OAAO,CAAC;EACnD,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,UAAU,GAAG,CAACH,SAAS;IAC7BC,YAAY,CAACE,UAAU,CAAC;IACxBJ,QAAQ,IAAIA,QAAQ,CAACI,UAAU,CAAC;EAClC,CAAC;EACD,oBACEX,OAAA;IAAKY,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCb,OAAA;MACEc,IAAI,EAAC,UAAU;MACfV,EAAE,EAAEA,EAAG;MACPQ,SAAS,EAAC,QAAQ;MAClBN,OAAO,EAAEE,SAAU;MACnBD,QAAQ,EAAEG;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvB,eACFlB,OAAA;MAAOmB,OAAO,EAAEf,EAAG;MAACQ,SAAS,EAAC,kCAAkC;MAAAC,QAAA,gBAC9Db,OAAA;QAAKY,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvBb,OAAA;UAAKY,SAAS,EAAC;QAAoD;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,eAC1ElB,OAAA;UACEY,SAAS,EAAG,GACVJ,SAAS,GAAG,cAAc,GAAG,UAC9B,kFACCA,SAAS,GAAG,kBAAkB,GAAG,EAClC;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACH,EACLb,KAAK,iBAAIL,OAAA;QAAKY,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAER;MAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEV,CAAC;AAACf,EAAA,CApCWF,oBAAgC;AAAAmB,EAAA,GAAhCnB,oBAAgC;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}